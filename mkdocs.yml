site_name: RAP Community of Practice
# site_url: https://example.com
repo_url: https://github.com/NHSDigital/rap-community-of-practice
repo_name: RAP Community of Practice
edit_uri: edit/main/docs/
plugins:
  - git-revision-date-localized:
      fallback_to_build_date: true
  - search
  - mkdocs-jupyter:
      include_source: True
      theme: dark
nav:
  - Home: index.md
  - About: about.md
  - Introduction to RAP:
      - Why RAP is important: introduction_to_RAP/why_RAP_is_important.md
      - Levels of RAP: introduction_to_RAP/levels_of_RAP.md
      - What is open source?: introduction_to_RAP/what-is-open-source.md
  - Our RAP service:
      - our_RAP_service/index.md
      - Building team capability: our_RAP_service/building_team_capability.md
      - Support models: our_RAP_service/support-models.md
      - Thin slice strategy: our_RAP_service/thin-slice-strategy.md
      - Typical engagement flow: our_RAP_service/typical-engagement-flow.md
      - RAP pre-engagement Questionnare: our_RAP_service/rap-pre-engagement-questionnaire.md
      - Programme level reporting: our_RAP_service/programme-level-reporting.md
      - Service design and user research: our_RAP_service/service-design-and-user-research.md
      
  - Implementing RAP:
      - Are you ready for RAP?: implementing_RAP/rap-readiness.md
      - Code review: implementing_RAP/code-review.md
      - Coding best practice: implementing_RAP/coding-best-practice.md
      - When to stop coding: implementing_RAP/when-to-stop-coding.md
      - How to publish your code in the open: implementing_RAP/how-to-publish-your-code-in-the-open.md
      - Updating published code: implementing_RAP/updating-your-published-code.md
      - Guidance on accessibility: implementing_RAP/accessibility-how-to.md
      - Quality assuring analytical outputs: implementing_RAP/quality-assuring-analytical-outputs.md
      - Technical workflow: implementing_RAP/technical-workflow.md
      - Notebooks vs IDE development: implementing_RAP/notebooks_versus_ide_development.md
      - Tidy data: implementing_RAP/tidy-data.md
      - Tools: implementing_RAP/tools.md
  - Training resources:
      - Git:
          - Intro to Git: training_resources/git/intro-to-git.md
          - Using Git collaboratively: training_resources/git/using-git-collaboratively.md
          - Git Hooks: training_resources/git/githooks.md
      - Python:
          - Intro to python: training_resources/python/intro-to-python.md
          - Basic Python data analysis operations: training_resources/python/basic-python-data-analysis-operations.md
          - Python functions: training_resources/python/python-functions.md
          - Visualisation in Python: training_resources/python/visualisation-in-python.md
          - Handling file paths: training_resources/python/handling-file-paths.md
          - Logging and error handling in Python: training_resources/python/logging-and-error-handling.md
          - Project structure and packaging: training_resources/python/project-structure-and-packaging.md
          - Using Python f-strings to run SQL queries: training_resources/python/using-f-strings-sql-queries.md
          - Virtual environments:
              - Why use virtual environments?: training_resources/python/virtual-environments/why-use-virtual-environments.md
              - Venv: training_resources/python/virtual-environments/venv.md
              - Conda: training_resources/python/virtual-environments/conda.md
          - Unit testing: training_resources/python/unit-testing.md
          - Unit testing field definitions: training_resources/python/unit-testing-field-definitions.md
          - Back testing: training_resources/python/backtesting.md
      - PySpark:
          - About PySpark: training_resources/pyspark/README.md
          - Logging and error handling in PySpark: training_resources/pyspark/logging-and-error-handling.md
          - PySpark style guide: training_resources/pyspark/pyspark-style-guide.md
          - Download our PySpark tutorial: training_resources/pyspark/pyspark-tutorial.py
          - Efficient Pyspark case study: training_resources/pyspark/efficient-pyspark-case-study.ipynb
      - R:
          - External resources: training_resources/R/README.md
          - Git with RStudio: training_resources/R/git_with_RStudio.md
  - Support: support.md
  - Glossary: glossary.md
  - Useful links: useful_links.md
  - Acknowledgements: acknowledgements.md
theme:
  name: material
  custom_dir: overrides
  palette:
    scheme: default
    primary: indigo
  font:
    text: Arial
  logo: images/logo/nhs-blue-on-white.jpg
  favicon: images/favicon/favicon.ico
  features:
    - search.share
    - content.code.annotate
    - content.tabs.link
    - navigation.tabs
    - navigation.indexes
  icon:
    admonition:
      <type>: material/alert
extra_css:
  - stylesheets/extra.css
markdown_extensions:
  - pymdownx.tasklist:
      # clickable_checkbox: true
      custom_checkbox: true
  - tables
  - attr_list
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.arithmatex:
      generic: true
  - admonition
  - pymdownx.details
  - pymdownx.critic
  - pymdownx.caret
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.tilde
extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/NHSDigital/rap-community-of-practice
      name: NHS Digital Analytical Services
  generator: false
  analytics:
    provider: smartlook
copyright: Copyright &copy; 2022 Crown Copyright (NHS Digital)
extra_javascript:
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
watch:
  - overrides
